<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=100vw, initial-scale=1.0">
    <title>CamillaDSP</title>
    <link rel="stylesheet" href="main.css">
</head>
<body>

<%- include('header.ejs'); %>

<div class="section" id="serverSettings">
    <div class="settingsGroup">
        <div class="settingsGroupTitle">CamillaDSP Server Settings</div>
        <span>Server Name  </span><input type="text" name="serverName" id="serverName">
        <span>Server IP  </span><input type="text" name="serverIp" id="serverIp">
        <span>Server Port  </span><input type="text" name="port" id="port">
        <br><input type="button" value="Save" onclick="saveServerClick()">
        <br>
        <!-- <br><input type="button" value="Check log" onclick="checkLog()"> -->
    </div>
    <br>
    <!-- <div class="section">
        <select name="" id="severList">
            <option value="a">a</option>
            <option value="b">b</option>
            <option value="c">c</option>

        </select>        
    </div> -->
    
</div>
<div id="statusBox" style="margin:10px"></div>


<script defer>
    
    let serverConfig= getDefaultServerConfig();

    document.getElementById('serverName').value=serverConfig.serverName;
    document.getElementById('serverIp').value=serverConfig.serverIp;
    document.getElementById('port').value=serverConfig.port;

    function saveServerClick() {
        let serverName = document.getElementById('serverName').value;
        let serverIp= document.getElementById('serverIp').value
        let port = document.getElementById('port').value;        
        checkConnection(serverIp,port).then(()=>{
            let o = {}
            o[serverName]= {"serverIp":serverIp,"port":port,"default":true};
            let a = []
            a.push(o)
            saveServerConfig(a);
            let statusBox = document.getElementById("statusBox")
            statusBox.innerText="Connected to  server "+serverIp+" at port "+port+" (v"+CamillaDSPVersion+")";            
            statusBox.style.color='hsl(180,40%,70%)';
            }).catch(e=>{
                console.log(e)
                document.getElementById("statusBox").innerText="Cannot connect to server.";
                statusBox.style.color='hsl(0,60%,70%)';
            })
    }

    async function checkConnection(server,port) {
        return new Promise((resolve,reject)=>{
            let tmpWS = new WebSocket("ws://"+server+":"+port);

            tmpWS.addEventListener("error", function (m){
                reject({"Status":"Error","Reason":"Can not connect to server.","Details":m});                
            });

            tmpWS.addEventListener("open", (event) => {            
                message="GetVersion";
                tmpWS.send(JSON.stringify(message));        
            });

            tmpWS.addEventListener("message", function (m){
                try {
                    const res = JSON.parse(m.data);                                                                   
                    if (res['GetVersion'].result=='Ok') {
                        CamillaDSPVersion=res['GetVersion'].value;                        
                        resolve("Success");
                    }          
                }
                catch(err) {
                    reject({"Status":"Error","Reason":"Can not connect to server.","Details":err});
                }  
            })
        });       
    }

</script>
</body>
</html>
